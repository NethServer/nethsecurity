#!/bin/bash

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-2.0-only
#

#
# Launch podman image to build nextsecurity
# As default the script mounts as volume staging and build dirs to speedup successibe builds
#

workdir=$(pwd)
image_tag=${IMAGE_TAG:-latest}
image="ghcr.io/nethserver/nextsecurity-builder:$image_tag"

VALID_ARGS=$(getopt -o n --long no-cache -- "$@")
if [[ $? -ne 0 ]]; then
    exit 1;
fi

cache=1
opts=""

eval set -- "$VALID_ARGS"
while [ : ]; do
  case "$1" in
    -n | --no-cache)
        echo "Disable caching"
	cache=0
        shift
        ;;
    --) shift; 
        break 
        ;;
  esac
done

# Setup output dir
# Delete existing backup, but save current output before starting the build
if [ -d bin ]; then
    rm -rf bin.bak
    mv bin bin.bak
fi

# Setup cache volumes
if [ $cache -ge 1 ]; then
    opts=" -v nextsecurity-build_dir:/home/build/openwrt/build_dir:z -v nextsecurity-staging_dir:/home/build/openwrt/staging_dir:z -v nextsecurity-ccache:/home/build/openwrt/.ccache -v nextsecurity-download:/home/build/openwrt/download"
fi

# Download latest image
podman pull $image

# Renove existing container
if [ "$(podman ps -a --format '{{.Names}}')" == "nextsec-builder" ]; then
    podman rm nextsec-builder
fi

# Run podman with local mounted dirs
podman run -ti --name nextsec-builder \
    --security-opt label=disable \
    --env=USIGN_PUB_KEY --env=USIGN_PRIV_KEY \
    --env=NETIFYD_ACCESS_TOKEN \
    -v ./config:/config:z -v ./files:/files:z -v ./packages:/nspackages:z -v ./patches:/patches:z \
    $opts $image "$@"
# When executed inside CI, do not execute next setps on error
ret=$?
if [[ $ret -gt 0 && -n "${CI}" ]]; then
    exit $ret
fi
podman cp nextsec-builder:/home/build/openwrt/bin/ $workdir/
if [ $? -eq 0 ]; then
    podman rm nextsec-builder
else
    echo
    echo "Export of built binaries failed: the container has not been removed"
    echo "To remove the container use: podman rm nextsec-builder"
    echo "To re-try export built binaries: podman cp nextsec-builder:/home/build/openwrt/bin/ $workdir/"
    echo
fi
