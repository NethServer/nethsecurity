#!/bin/bash

set -e

# Paramaters:
# - ROLE: main or secondary
# - LANINTERFACE: is the interface that is in the LAN, example: eth0
# - HAINTERFACE: is the the interface that will be used for the HA sync, example: eth2
# - VIRTUALIP: is the virtual IP address that will be moved between nodes, example: 192.168.1.2 (must be part of the LAN network)
# - HAMAINIPADDRESS: is the IP address of the master node, example: 100.100.100.1
# - HASECONDARYIPADDRESS: is the IP address of the secondary node, example: 100.100.100.2
# - PUBKEY: main node public key, example: "ssh-rsa AAAAB3Nza...uZzj root@primary"
#
# Example invocation on the main node:
# ./keepalived-config main eth0 eth2 192.168.1.1 10.12.12.1 10.12.12.2
# The script will output the public key that should be used in the secondary node
#
# Example invocation on the secondary node:
# ./keepalived-config secondary eth0 eth2 192.168.1.1 10.12.12.1 10.12.12.2 "ssh-rsa AAAAB3Nza...uZzj root@primary"

# Parameters
ROLE=$1
LANINTERFACE=$2
HAINTERFACE=$3
VIRTUALIP=$4
HAMAINIPADDRESS=$5
HASECONDARYIPADDRESS=$6
PUBKEY=$7

# Output file path
OUTPUT_FILE="/etc/config/keepalived"

cat <<EOF > $OUTPUT_FILE
	config globals 'globals'

	config ipaddress
		option name '${LANINTERFACE}_ha'
		option address '${VIRTUALIP}'
		option device '${LANINTERFACE}'
		option label_suffix 'ha'

	config vrrp_script
		option name 'ha_sync'
		option script '/etc/keepalived/scripts/rsync.sh'
		option interval '60'
		option weight '100'

	config static_ipaddress
		list address '${LANINTERFACE}_ha'

	config track_interface
		option name '${LANINTERFACE}_ha'
		option value '${LANINTERFACE}'
		option weight '100'
EOF

if [ "$ROLE" == "main" ]; then

	cat <<EOF >> $OUTPUT_FILE
	config track_script
		option name 'sender'
		option value 'ha_sync'
		option weight '100'

	config peer
		option name 'backup'
		option address '${HASECONDARYIPADDRESS}'
		option sync '1'
		option sync_mode 'send'
		option ssh_port '22'
		option sync_dir '/usr/share/keepalived/rsync'
		option ssh_key '/etc/keepalived/keys/id_rsa'

	config vrrp_instance
		option name 'master'
		option state 'MASTER'
		option interface '${HAINTERFACE}'
		option virtual_router_id '100'
		option priority '100'
		option advert_int '1'
		option nopreempt '0'
		list virtual_ipaddress '${LANINTERFACE}_ha'
		option unicast_src_ip '${HAMAINIPADDRESS}'
		list unicast_peer 'backup'
		option auth_type 'PASS'
		option auth_pass 'admin'
		list track_interface '${LANINTERFACE}_ha'
		list track_script 'sender'
EOF

	# Generate the private key if it does not exist
	if [ ! -f /etc/keepalived/keys/id_rsa ]; then
		dropbearkey -t rsa -f /etc/keepalived/keys/id_rsa
	fi

	# Print the public key
	dropbearkey -y -f /etc/keepalived/keys/id_rsa | grep ssh-rsa

elif [ "$ROLE" == "secondary" ]; then

	cat <<EOF >> $OUTPUT_FILE
	config track_script
		option name 'receiver'
		option value 'ha_sync'
		option weight '100'

	config peer
		option name 'master'
		option address '${HAMAINIPADDRESS}'
		option sync '1'
		option sync_mode 'receive'
		option sync_dir '/usr/share/keepalived/rsync'
		option ssh_pubkey '${PUBKEY}'

	config vrrp_instance
		option name 'backup'
		option state 'BACKUP'
		option interface 'eth1'
		option virtual_router_id '100'
		option priority '50'
		option advert_int '1'
		option nopreempt '0'
		list virtual_ipaddress '${LANINTERFACE}_ha'
		option unicast_src_ip '${HASECONDARYIPADDRESS}'
		list unicast_peer 'master'
		option auth_type 'PASS'
		option auth_pass 'admin'
		list track_interface '${LANINTERFACE}_ha'
		list track_script 'receiver'
EOF

fi
