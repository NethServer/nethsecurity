#!/usr/bin/python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-2.0-only
#

import subprocess
import json
from euci import EUci
from requests import Session, HTTPError
from requests.adapters import HTTPAdapter
from urllib3 import Retry
import datetime

# edit this path also in ns.subscription
TMP_FILE = '/tmp/inventory-sent.json'

# Send the inventory
e_uci = EUci()
system_id = e_uci.get('ns-plug', 'config', 'system_id', default=None)
system_secret = e_uci.get('ns-plug', 'config', 'secret', default=None)

if system_id is None or system_secret is None:
    # System ID and System secret not found, configure ns-plug to enable it
    exit(0)

url = e_uci.get('ns-plug', 'config', 'inventory_url', default='')
subscription_type = e_uci.get('ns-plug', 'config', 'type', default='')

inventory_data = subprocess.run(['/usr/sbin/inventory'], capture_output=True, text=True)
payload = {
    'data': {
        'lk': system_id,
        'data': json.loads(inventory_data.stdout)
    }
}

request_session = Session()
request_session.headers.update({
    'Content-Type': 'application/json',
    'Accept': 'application/json',
})
request_session.mount('http', HTTPAdapter(max_retries=Retry(total=3)))

attempted_sync_time = datetime.datetime.now().astimezone().isoformat(timespec='seconds')
try:
    request_session.post(
        url,
        headers={
            'Authorization': f'token {system_secret}',
        },
        json=payload,
        timeout=180,
    ).raise_for_status()

    if subscription_type == 'enterprise':
        # Update registration date
        request_session.post(
             'https://my.nethesis.it/nb b 5t6api/systems/info',
            json={'secret': system_secret},
            timeout=180
        ).raise_for_status()

    with open(TMP_FILE, 'w') as f:
        json.dump({
            'status': 'success',
            'last_attempt': attempted_sync_time,
        }, f)
except Exception:
    with open(TMP_FILE, 'w') as f:
        json.dump({
            'status': 'error',
            'last_attempt': attempted_sync_time,
        }, f)
