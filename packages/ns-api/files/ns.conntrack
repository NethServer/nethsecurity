#!/usr/bin/python3

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-2.0-only
#

import json
import sys

from nethsec import conntrack
from nethsec.utils import ValidationError, generic_error

cmd = sys.argv[1]

if cmd == 'list':
    print(json.dumps({
        'list': {},
        'drop': {
            'id': ''
        },
        'drop_all': {}
    }))
elif cmd == 'call':
    action = sys.argv[2]
    if action == 'list':
        print(json.dumps({
            'data': conntrack.list_connections()
        }))
    elif action == 'drop':
        data = json.loads(sys.stdin.read())
        if 'id' not in data:
            raise ValidationError('id', 'required')
        try:
            conntrack.drop_connection(data['id'])
        except ValueError as e:
            # this connection is not found, probably already dropped
            pass
        except RuntimeError as e:
            json.dump(generic_error('command failed'), sys.stdout)

        json.dump({'message': 'success'}, sys.stdout)
    elif action == 'drop_all':
        try:
            conntrack.drop_all_connections()
            json.dump({'message': 'success'}, sys.stdout)
        except RuntimeError as e:
            json.dump(generic_error('command failed'), sys.stdout)
