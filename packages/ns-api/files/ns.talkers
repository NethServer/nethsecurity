#!/usr/bin/python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-2.0-only
#

# Read netify plugin statics file and return a list of top network talkers

import sys
import json
import socket

def sfmt(num, suffix="B"):
    for unit in ["", "K", "M", "G", "T", "P", "E", "Z"]:
        if abs(num) < 1024.0:
            return f"{num:3.1f} {unit}{suffix}/s"
        num /= 1024.0
    return f"{num:.1f} Y{suffix}/s"

def list_talkers(limit = 20, stat_file="/tmp/netify-plugin-stats.json"):
    data = None
    stats = dict()
    stats_list = list()
    time_diff = 1

    with open(stat_file, 'r') as fp:
        data = json.load(fp)

    time_diff = data['log_time_end'] - data['log_time_start']

    for mac in data['stats']:
        for ip in data['stats'][mac]:
            if ip not in stats:
                stats[ip] = {
                        'mac': mac,
                        'totals': {
                            'download': 0,
                            'upload': 0,
                            'packets': 0,
                            'bandwidth' : 0,
                            },
                        'apps': {}
                        }
                for app in data['stats'][mac][ip]:
                    if app not in stats[ip]['apps']:
                        stats[ip]['apps'][app] = 0
                for proto in  data['stats'][mac][ip][app]:
                    stats[ip]['totals']['download'] += data['stats'][mac][ip][app][proto]['download']
                    stats[ip]['totals']['upload'] += data['stats'][mac][ip][app][proto]['upload']
                    stats[ip]['totals']['bandwidth'] +=  data['stats'][mac][ip][app][proto]['download'] +  data['stats'][mac][ip][app][proto]['upload']
                    stats[ip]['totals']['packets'] += data['stats'][mac][ip][app][proto]['packets']
                    stats[ip]['apps'][app] += data['stats'][mac][ip][app][proto]['download'] + data['stats'][mac][ip][app][proto]['upload']

    for ip in stats:
        info = stats[ip]
        info['ip'] = ip
        info['host'] = socket.getnameinfo((ip, 0), 0)[0]
        info['totals']['bandwidth'] = info['totals']['bandwidth'] / time_diff
        info['totals']['bandwiddh_h'] = sfmt(info['totals']['bandwidth'])
        stats_list.append(info)

    ordered = sorted(stats_list, key=lambda x: x['totals']['bandwidth'], reverse=True)
    return ordered[:limit]


cmd = sys.argv[1]

if cmd == 'list':
    print(json.dumps({"list": {"limit": 20}}))
else:
    try:
        args = json.loads(sys.stdin.read())
        limit = args.get('limit', 20)
        print(json.dumps({'talkers': list_talkers(limit)}))
    except:
        print(json.dumps({'talkers': list()}))
